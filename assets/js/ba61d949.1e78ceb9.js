"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[41],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),f=l,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||r;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var s=2;s<r;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3298:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var a=n(7462),l=(n(7294),n(3905));const r={},o="CLI",i={unversionedId:"cli",id:"cli",title:"CLI",description:"Elf comes with a CLI that enables a fast and easy setup of your store. It offers the following commands:",source:"@site/docs/cli.mdx",sourceDirName:".",slug:"/cli",permalink:"/elf/docs/cli",draft:!1,editUrl:"https://github.com/ngneat/elf/docusaurus/edit/main/website/docs/cli.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Using Immer",permalink:"/elf/docs/immer"},next:{title:"Managing Side Effects",permalink:"/elf/docs/side-effects"}},p={},s=[{value:"Install",id:"install",level:2},{value:"Repo",id:"repo",level:2},{value:"Config",id:"config",level:3},{value:"<code>repoTemplate</code>",id:"repotemplate",level:3},{value:"<code>inlineStoreInClass</code>",id:"inlinestoreinclass",level:3},{value:"<code>idKey</code>",id:"idkey",level:3},{value:"<code>repoLibrary</code>",id:"repolibrary",level:3},{value:"<code>plugins</code>",id:"plugins",level:3},{value:"<code>@ngneat/elf-cli-ng</code>",id:"ngneatelf-cli-ng",level:4},{value:"fuzzypath",id:"fuzzypath",level:3}],c={toc:s};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"cli"},"CLI"),(0,l.kt)("p",null,"Elf comes with a CLI that enables a fast and easy setup of your store. It offers the following commands:"),(0,l.kt)("h2",{id:"install"},"Install"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ npx @ngneat/elf-cli install\n")),(0,l.kt)("p",null,"Using the above command, you can choose which packages to install. Your package manager will be detected and used for installation."),(0,l.kt)("h2",{id:"repo"},"Repo"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ npx @ngneat/elf-cli repo\n$ npx @ngneat/elf-cli repo --dry-run\n")),(0,l.kt)("p",null,"Using the above command, you can create a ",(0,l.kt)("inlineCode",{parentName:"p"},"repository")," file. All the boilerplate will be created for you based on which ",(0,l.kt)("em",{parentName:"p"},"features")," you select."),(0,l.kt)("h3",{id:"config"},"Config"),(0,l.kt)("p",null,"You can set the configuration by providing the ",(0,l.kt)("inlineCode",{parentName:"p"},"package.json")," file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  "elf": {\n    "cli": {\n      "repoTemplate": "class",\n      "inlineStoreInClass": true,\n      "idKey": "_id",\n      "repoLibrary": "state",\n      "plugins": []\n    }\n  }\n}\n')),(0,l.kt)("h3",{id:"repotemplate"},(0,l.kt)("inlineCode",{parentName:"h3"},"repoTemplate")),(0,l.kt)("p",null,"By default, the ",(0,l.kt)("inlineCode",{parentName:"p"},"repository")," file generates exported functions. If you prefer to use a class, for instance, when working with Angular, you can set this option to ",(0,l.kt)("inlineCode",{parentName:"p"},"class"),"."),(0,l.kt)("h3",{id:"inlinestoreinclass"},(0,l.kt)("inlineCode",{parentName:"h3"},"inlineStoreInClass")),(0,l.kt)("p",null,"By default, a store is created outside of the class. If you prefer creating the store inside a class you can set this option to ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),". It might be helpful when you create a ",(0,l.kt)("inlineCode",{parentName:"p"},"component store")," or you want to set the initial value to the store given via Angular DI (Works only with ",(0,l.kt)("inlineCode",{parentName:"p"},"repoTemplate")," set as ",(0,l.kt)("inlineCode",{parentName:"p"},"class"),")."),(0,l.kt)("h3",{id:"idkey"},(0,l.kt)("inlineCode",{parentName:"h3"},"idKey")),(0,l.kt)("p",null,"The default ",(0,l.kt)("inlineCode",{parentName:"p"},"idKey")," for the package ",(0,l.kt)("inlineCode",{parentName:"p"},"@ngenat/elf-entities")," is ",(0,l.kt)("inlineCode",{parentName:"p"},"id"),". By setting this option, you can change it globally."),(0,l.kt)("h3",{id:"repolibrary"},(0,l.kt)("inlineCode",{parentName:"h3"},"repoLibrary")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"repository")," file is created by default at the root path you specify (i.e., ",(0,l.kt)("inlineCode",{parentName:"p"},"flat"),"). If you set this option, you can specify the ",(0,l.kt)("inlineCode",{parentName:"p"},"directory")," you want."),(0,l.kt)("h3",{id:"plugins"},(0,l.kt)("inlineCode",{parentName:"h3"},"plugins")),(0,l.kt)("p",null,"Specify which plugins you want to use."),(0,l.kt)("h4",{id:"ngneatelf-cli-ng"},(0,l.kt)("inlineCode",{parentName:"h4"},"@ngneat/elf-cli-ng")),(0,l.kt)("p",null,"Install the package, and add the following code:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  "elf": {\n    "cli": {\n      "repoTemplate": "class",\n      "plugins": ["@ngneat/elf-cli-ng"]\n    }\n  }\n}\n')),(0,l.kt)("p",null,"The plugin will add the ",(0,l.kt)("inlineCode",{parentName:"p"},"Injectable")," decorator to the ",(0,l.kt)("inlineCode",{parentName:"p"},"repository")," class."),(0,l.kt)("h3",{id:"fuzzypath"},"fuzzypath"),(0,l.kt)("p",null,"A ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/adelsz/inquirer-fuzzy-path"},"fuzzy")," file/directory search and selection prompt. It can be configured as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="elf.config.js"',title:'"elf.config.js"'},"module.exports = {\n  cli: {\n    fuzzypath: {\n      rootPath: // defaults to process.cwd()\n      excludePath(path) {\n        // defaults to path.includes('node_modules')\n      }\n      excludeFilter(path) {\n        // defaults to path.includes('.');\n      }\n    }\n  }\n}\n")))}u.isMDXComponent=!0}}]);