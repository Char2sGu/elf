"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[258],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),p=u(n),f=i,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(m,s(s({ref:t},c),{},{components:n})):r.createElement(m,s({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=p;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var u=2;u<o;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2142:(e,t,n)=>{n.d(t,{S:()=>j});var r=n(7294),i=["angular-cli","create-react-app","html","javascript","node","polymer","typescript","vue"],o={clickToLoad:function(e){return a("ctl",e)},devToolsHeight:function(e){return l("devToolsHeight",e)},forceEmbedLayout:function(e){return a("embed",e)},hideDevTools:function(e){return a("hideDevTools",e)},hideExplorer:function(e){return a("hideExplorer",e)},hideNavigation:function(e){return a("hideNavigation",e)},showSidebar:function(e){return function(e,t){return"boolean"==typeof t?"showSidebar="+(t?"1":"0"):""}(0,e)},openFile:function(e){return function(e,t){return(Array.isArray(t)?t:[t]).filter((function(e){return"string"==typeof e&&""!==e.trim()})).map((function(e){return"file="+encodeURIComponent(e.trim())}))}(0,e).join("&")},terminalHeight:function(e){return l("terminalHeight",e)},theme:function(e){return u("theme",["light","dark"],e)},view:function(e){return u("view",["preview","editor"],e)}};function s(e){void 0===e&&(e={});var t=Object.entries(e).map((function(e){var t=e[0],n=e[1];return null!=n&&o.hasOwnProperty(t)?o[t](n):""})).filter(Boolean);return t.length?"?"+t.join("&"):""}function a(e,t){return!0===t?e+"=1":""}function l(e,t){return"number"==typeof t&&t>=0&&t<=100?e+"="+Math.round(t):""}function u(e,t,n){return"string"==typeof n&&t.includes(n)?e+"="+n:""}function c(){return Math.random().toString(36).slice(2,6)+Math.random().toString(36).slice(2,6)}function d(e,t){var n={forceEmbedLayout:!0};return t&&"object"==typeof t&&Object.assign(n,t),""+p(n)+e+s(n)}function p(e){return void 0===e&&(e={}),"string"==typeof e.origin?e.origin:"https://stackblitz.com"}function f(e,t,n){if(!t||!e||!e.parentNode)throw new Error("Invalid Element");e.id&&(t.id=e.id),e.className&&(t.className=e.className),function(e,t){t&&"object"==typeof t&&(Object.hasOwnProperty.call(t,"height")&&(e.height=""+t.height),Object.hasOwnProperty.call(t,"width")&&(e.width=""+t.width)),e.height||(e.height="300"),e.width||e.setAttribute("style","width:100%;")}(t,n),e.parentNode.replaceChild(t,e)}function m(e){if("string"==typeof e){var t=document.getElementById(e);if(!t)throw new Error("Could not find element with id '"+e+"'");return t}if(e instanceof HTMLElement)return e;throw new Error("Invalid element: "+e)}function h(){return h=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},h.apply(this,arguments)}var g=function(){function e(e){this.port=void 0,this.pending={},this.port=e,this.port.onmessage=this.messageListener.bind(this)}var t=e.prototype;return t.request=function(e){var t=this,n=e.type,r=e.payload,i=c();return new Promise((function(e,o){t.pending[i]={resolve:e,reject:o},t.port.postMessage({type:n,payload:h({},r,{__reqid:i})})}))},t.messageListener=function(e){var t;if("string"==typeof(null==(t=e.data.payload)?void 0:t.__reqid)){var n=e.data,r=n.type,i=n.payload,o=i.__reqid,s=i.__error;this.pending[o]&&(i.__success?this.pending[o].resolve(function(e){var t=h({},e);return delete t.__reqid,delete t.__success,delete t.__error,Object.keys(t).length?t:null}(i)):this.pending[o].reject(s?r+": "+s:r),delete this.pending[o])}},e}(),y=function(){function e(e,t){var n=this;this._rdc=void 0,this.editor={openFile:function(e){return n._rdc.request({type:"SDK_OPEN_FILE",payload:{path:e}})},setCurrentFile:function(e){return n._rdc.request({type:"SDK_SET_CURRENT_FILE",payload:{path:e}})},setTheme:function(e){return n._rdc.request({type:"SDK_SET_UI_THEME",payload:{theme:e}})},setView:function(e){return n._rdc.request({type:"SDK_SET_UI_VIEW",payload:{view:e}})},showSidebar:function(e){return void 0===e&&(e=!0),n._rdc.request({type:"SDK_TOGGLE_SIDEBAR",payload:{visible:e}})}},this.preview={origin:"",getUrl:function(){return n._rdc.request({type:"SDK_GET_PREVIEW_URL",payload:{}}).then((function(e){var t;return null!=(t=null==e?void 0:e.url)?t:null}))},setUrl:function(e){if(void 0===e&&(e="/"),"string"!=typeof e||!e.startsWith("/"))throw new Error("Invalid argument: expected a path starting with '/', got '"+e+"'");return n._rdc.request({type:"SDK_SET_PREVIEW_URL",payload:{path:e}})}},this._rdc=new g(e),Object.defineProperty(this.preview,"origin",{value:"string"==typeof t.previewOrigin?t.previewOrigin:null,writable:!1})}var t=e.prototype;return t.applyFsDiff=function(e){var t=function(e){return null!==e&&"object"==typeof e};if(!t(e)||!t(e.create))throw new Error("Invalid diff object: expected diff.create to be an object.");if(!Array.isArray(e.destroy))throw new Error("Invalid diff object: expected diff.create to be an array.");return this._rdc.request({type:"SDK_APPLY_FS_DIFF",payload:e})},t.getDependencies=function(){return this._rdc.request({type:"SDK_GET_DEPS_SNAPSHOT",payload:{}})},t.getFsSnapshot=function(){return this._rdc.request({type:"SDK_GET_FS_SNAPSHOT",payload:{}})},e}(),v=[],b=function(e){var t=this;this.element=void 0,this.id=void 0,this.pending=void 0,this.vm=void 0,this.id=c(),this.element=e,this.pending=new Promise((function(e,n){var r=function(n){var r=n.data;"SDK_INIT_SUCCESS"===(null==r?void 0:r.action)&&r.id===t.id&&(t.vm=new y(n.ports[0],r.payload),e(t.vm),o())},i=function(){var e;null==(e=t.element.contentWindow)||e.postMessage({action:"SDK_INIT",id:t.id},"*")};function o(){window.clearInterval(a),window.removeEventListener("message",r)}window.addEventListener("message",r),i();var s=0,a=window.setInterval((function(){if(t.vm)o();else{if(s>=20)return o(),n("Timeout: Unable to establish a connection with the StackBlitz VM"),void v.forEach((function(e,n){e.id===t.id&&v.splice(n,1)}));s++,i()}}),500)})),v.push(this)};function w(e,t){var n=document.createElement("input");return n.type="hidden",n.name=e,n.value=t,n}function k(e){if(!i.includes(e.template)){var t=i.map((function(e){return"'"+e+"'"})).join(", ");console.warn("Unsupported project.template: must be one of "+t)}var n="node"===e.template,r=document.createElement("form");return r.method="POST",r.setAttribute("style","display:none!important;"),r.appendChild(w("project[title]",e.title)),r.appendChild(w("project[description]",e.description)),r.appendChild(w("project[template]",e.template)),e.dependencies&&(n?console.warn("Invalid project.dependencies: dependencies must be provided as a 'package.json' file when using the 'node' template."):r.appendChild(w("project[dependencies]",JSON.stringify(e.dependencies)))),e.settings&&r.appendChild(w("project[settings]",JSON.stringify(e.settings))),Object.keys(e.files).forEach((function(t){"string"==typeof e.files[t]&&r.appendChild(w("project[files]["+t+"]",e.files[t]))})),r}function E(e){var t,n,r,i;return null!=e&&e.contentWindow?(null!=(i=(n=e)instanceof Element?"element":"id",t=null!=(r=v.find((function(e){return e[i]===n})))?r:null)?t:new b(e)).pending:Promise.reject("Provided element is not an iframe.")}var T=function(e,t,n){var r,i=m(e),o=function(e,t){var n=k(e);return n.action=d("/run",t),n.id="sb","<html><head><title></title></head><body>"+n.outerHTML+"<script>document.getElementById('"+n.id+"').submit();<\/script></body></html>"}(t,n),s=document.createElement("iframe");return f(i,s,n),null==(r=s.contentDocument)||r.write(o),E(s)},q=n(2949);const R={core:{"@ngneat/elf":"latest"},entities:{"@ngneat/elf-entities":"latest"},requests:{"@ngneat/elf-requests":"latest"},pagination:{"@ngneat/elf-pagination":"latest"},devtools:{"@ngneat/elf-devtools":"latest"},persist:{"@ngneat/elf-persist-state":"latest"},history:{"@ngneat/elf-state-history":"latest"},rxjs:{rxjs:"latest"},immer:{immer:"latest"}};function j(e){let{src:t,packages:n=[]}=e;const i=(0,r.useRef)(),o=(0,r.useRef)(),s=["core","rxjs",...n],{colorMode:a}=(0,q.I)();return(0,r.useEffect)((()=>{const e=s.reduce(((e,t)=>(Object.assign(e,R[t]),e)),{});T(i.current,{description:"this is descrption",title:"Elf Core",files:{"index.html":"","index.ts":t},template:"typescript",dependencies:e,settings:{compile:{clearConsole:!0}}},{hideDevTools:!1,devToolsHeight:99,theme:a,height:"500px"}).then((e=>{o.current=e.editor}))}),[]),(0,r.useEffect)((()=>{o.current&&o.current.setTheme(a)}),[a]),r.createElement("section",{style:{height:"500px"}},r.createElement("div",{ref:i}))}},7323:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));var o=n(2142);const s={},a="Requests Result",l={unversionedId:"features/requests-result",id:"features/requests-result",title:"Requests Result",description:"Elf provides a convenient way to track the status of async requests and combine it with your store selectors. First, you need to install the package by",source:"@site/docs/features/requests-result.mdx",sourceDirName:"features",slug:"/features/requests-result",permalink:"/elf/docs/features/requests-result",draft:!1,editUrl:"https://github.com/ngneat/elf/docusaurus/edit/main/website/docs/features/requests-result.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Entities Props Factory",permalink:"/elf/docs/features/entities-management/entities-props-factory"},next:{title:"Pagination",permalink:"/elf/docs/features/pagination"}},u={},c=[{value:"Additional Options",id:"additional-options",level:3},{value:"API",id:"api",level:3}],d={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"requests-result"},"Requests Result"),(0,i.kt)("p",null,"Elf provides a convenient way to track the ",(0,i.kt)("inlineCode",{parentName:"p"},"status")," of async requests and combine it with your store selectors. First, you need to install the package by\nusing the CLI command ",(0,i.kt)("inlineCode",{parentName:"p"},"elf-cli install")," and selecting the requests package, or via npm:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @ngneat/elf-requests\n")),(0,i.kt)("p",null,"Now, simply add to your source request the ",(0,i.kt)("inlineCode",{parentName:"p"},"trackRequestResult")," operator, and give it a unique ",(0,i.kt)("inlineCode",{parentName:"p"},"key"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todos.service.ts"',title:'"todos.service.ts"'},"import { trackRequestResult } from '@ngneat/elf-requests';\nimport { setTodos } from './todos.repository';\n\nexport function fetchTodos() {\n  return http.get(todosUrl).pipe(\n    tap(setTodos),\n    // highlight-next-line\n    trackRequestResult(['todos'])\n  );\n}\n")),(0,i.kt)("p",null,"Now, we can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"joinRequestResult")," operator with our store selectors:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todos.repository"',title:'"todos.repository"'},"import { createStore } from '@ngneat/elf';\nimport { withEntities } from '@ngneat/elf-entities';\nimport { joinRequestResult } from '@ngneat/elf-requests';\n\ninterface Todo {\n  id: number;\n  label: string;\n}\n\nconst todosStore = createStore({ name: 'todos' }, withEntities<Todo>());\n\nexport const entities$ = store.pipe(\n  selectAllEntities(),\n  // highlight-next-line\n  joinRequestResult(['todos'])\n);\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"entities$")," selector will now track the ",(0,i.kt)("inlineCode",{parentName:"p"},"todos")," request and will provide the following information:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"entities$.subscribe(\n  ({ isLoading, isError, isSuccess, data, error, status }) => {\n    console.log(\n      isLoading,\n      isError,\n      isSuccess,\n      status,\n      successfulRequestsCount,\n      data, // typed as Todo[]\n      error\n    );\n  }\n);\n")),(0,i.kt)(o.S,{src:"import { createStore } from '@ngneat/elf';\nimport {\n  setEntities,\n  withEntities,\n  selectAllEntities,\n} from '@ngneat/elf-entities';\nimport { joinRequestResult, trackRequestResult } from '@ngneat/elf-requests';\nimport { fromFetch } from 'rxjs/fetch';\nimport { tap } from 'rxjs';\n\ninterface Todo {\n  id: number;\n  label: string;\n}\n\nconst store = createStore({ name: 'todos' }, withEntities<Todo>());\n\nconst entities$ = store.pipe(selectAllEntities(), joinRequestResult(['todos']));\n\nentities$.subscribe((result) => {\n  console.log(result);\n});\n\nfunction setTodos(todos: Todo[]) {\n  store.update(setEntities(todos));\n}\n\n// todos.service.ts\nfunction fecthTodos() {\n  return fromFetch<Todo[]>('https://jsonplaceholder.typicode.com/todos', {\n    selector: (response) => response.json(),\n  }).pipe(tap(setTodos), trackRequestResult(['todos']));\n}\n\nsetTimeout(() => {\n  fecthTodos().subscribe();\n}, 2000);\n\nsetTimeout(() => {\n  fecthTodos().subscribe();\n}, 4000);\n",packages:["entities","requests"],mdxType:"LiveDemo"}),(0,i.kt)("br",null),(0,i.kt)("p",null,"Here is an example of a ",(0,i.kt)("inlineCode",{parentName:"p"},"dynamic")," selector:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export const selectTodo = (id: Todo['id]) => store.pipe(\n  selectEntity(id),\n  // highlight-next-line\n  joinRequestResult(['todos', id])\n);\n")),(0,i.kt)("h3",{id:"additional-options"},"Additional Options"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"staleTime")," - When we should refetch")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todos.service.ts"',title:'"todos.service.ts"'},"import { trackRequestResult } from '@ngneat/elf-requests';\nimport { setTodos } from './todos.repository';\n\nexport function fetchTodos() {\n  return http.get(todosUrl).pipe(\n    tap(setTodos),\n    // highlight-next-line\n    trackRequestResult(['todos'], { staleTime: 10_000 })\n  );\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"skipCache")," - Ignore everything and perform the request")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todos.service.ts"',title:'"todos.service.ts"'},"import { trackRequestResult } from '@ngneat/elf-requests';\nimport { setTodos } from './todos.repository';\n\nexport function fetchTodos() {\n  return http.get(todosUrl).pipe(\n    tap(setTodos),\n    // highlight-next-line\n    trackRequestResult(['todos'], { skipCache: true })\n  );\n}\n")),(0,i.kt)("h3",{id:"api"},"API"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"getRequestResult")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"getRequestResult(key): Observable<RequestResult>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"deleteRequestResult")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"deleteRequestResult(key): void")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"clearRequestsResult")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"clearRequestsResult(key): void"))))}p.isMDXComponent=!0}}]);