"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[627],{858:(e,t,n)=>{n.d(t,{S:()=>o});var i=n(7294),r=n(9979),s=n(2949);const a={core:{"@ngneat/elf":"latest"},entities:{"@ngneat/elf-entities":"latest"},requests:{"@ngneat/elf-requests":"latest"},pagination:{"@ngneat/elf-pagination":"latest"},devtools:{"@ngneat/elf-devtools":"latest"},persist:{"@ngneat/elf-persist-state":"latest"},history:{"@ngneat/elf-state-history":"latest"},rxjs:{rxjs:"latest"},immer:{immer:"latest"}};function o(e){let{src:t,packages:n=[]}=e;const o=(0,i.useRef)(),p=(0,i.useRef)(),c=["core","rxjs",...n],{colorMode:d}=(0,s.I)();return(0,i.useEffect)((()=>{const e=c.reduce(((e,t)=>(Object.assign(e,a[t]),e)),{});r.Z.embedProject(o.current,{description:"this is descrption",title:"Elf Core",files:{"index.html":"","index.ts":t},template:"typescript",dependencies:e,settings:{compile:{clearConsole:!0}}},{hideDevTools:!1,devToolsHeight:99,theme:d,height:"500px"}).then((e=>{p.current=e.editor}))}),[]),(0,i.useEffect)((()=>{p.current&&p.current.setTheme(d)}),[d]),i.createElement("section",{style:{height:"500px"}},i.createElement("div",{ref:o}))}},8101:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>f,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var i=n(7462),r=(n(7294),n(3905));const s="import { createStore } from '@ngneat/elf';\nimport {\n  addEntities,\n  entitiesPropsFactory,\n  upsertEntitiesById,\n  withEntities,\n} from '@ngneat/elf-entities';\n\nconst { cartEntitiesRef, withCartEntities } = entitiesPropsFactory('cart');\n\ninterface Product {\n  id: number;\n  title: string;\n  price: number;\n}\n\ninterface CartItem {\n  id: Product['id'];\n  quantity: number;\n}\n\nconst productsStore = createStore(\n  { name: 'products' },\n  withEntities<Product>(),\n  withCartEntities<CartItem>()\n);\n\nproductsStore.subscribe((value) => {\n  console.log(value);\n});\n\nproductsStore.update(\n  addEntities({ id: 1, title: 'one', price: 55 }),\n  upsertEntitiesById(1, {\n    updater: (e) => ({ ...e, quantity: e.quantity + 1 }),\n    creator: (id) => ({ id, quantity: 1 }),\n    ref: cartEntitiesRef,\n  })\n);\n";var a=n(858);const o={},p="Entities Props Factory",c={unversionedId:"features/entities-management/entities-props-factory",id:"features/entities-management/entities-props-factory",title:"Entities Props Factory",description:"There are two built-in entities props included in Elf - withEntities and UIEntities. In addition to that, we can create our own entities props for our stores.",source:"@site/docs/features/entities-management/entities-props-factory.mdx",sourceDirName:"features/entities-management",slug:"/features/entities-management/entities-props-factory",permalink:"/elf/docs/features/entities-management/entities-props-factory",draft:!1,editUrl:"https://github.com/ngneat/elf/docusaurus/edit/main/website/docs/features/entities-management/entities-props-factory.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Active ID(s)",permalink:"/elf/docs/features/entities-management/active-ids"},next:{title:"Requests Result",permalink:"/elf/docs/features/requests-result"}},d={},l=[],u={toc:l},m="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"entities-props-factory"},"Entities Props Factory"),(0,r.kt)("p",null,"There are two built-in entities props included in Elf - ",(0,r.kt)("a",{parentName:"p",href:"./entities"},(0,r.kt)("inlineCode",{parentName:"a"},"withEntities"))," and ",(0,r.kt)("a",{parentName:"p",href:"./ui-entities"},(0,r.kt)("inlineCode",{parentName:"a"},"UIEntities")),". In addition to that, we can create our own entities props for our stores."),(0,r.kt)("p",null,"Let's say we have a products page with a shopping cart. As well as managing a store for products, we must also maintain a shopping cart. We can create a new ",(0,r.kt)("inlineCode",{parentName:"p"},"Store")," for our ",(0,r.kt)("inlineCode",{parentName:"p"},"cart")," or a ",(0,r.kt)("inlineCode",{parentName:"p"},"cart")," entity props in the same ",(0,r.kt)("inlineCode",{parentName:"p"},"products")," store."),(0,r.kt)("p",null,"First, let's create the ",(0,r.kt)("inlineCode",{parentName:"p"},"products")," store:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="products.repository.ts"',title:'"products.repository.ts"'},"import { createStore } from '@ngneat/elf';\nimport { withEntities } from '@ngneat/elf-entities';\n\ninterface Product {\n  id: number;\n  title: string;\n  price: number;\n}\n\nexport const productsStore = createStore(\n  { name: 'products' },\n  withEntities<Product>()\n);\n")),(0,r.kt)("p",null,"Now we can add a ",(0,r.kt)("inlineCode",{parentName:"p"},"cart")," entities props to the same ",(0,r.kt)("inlineCode",{parentName:"p"},"store"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="products.repository.ts"',title:'"products.repository.ts"'},"import { createStore } from '@ngneat/elf';\nimport { withEntities, entitiesPropsFactory } from '@ngneat/elf-entities';\n\n// highlight-next-line\nconst { cartEntitiesRef, withCartEntities } = entitiesPropsFactory('cart');\n\ninterface Product {\n  id: number;\n  title: string;\n  price: number;\n}\n\ninterface CartItem {\n  id: Product['id'];\n  quantity: number;\n}\n\nexport const productsStore = createStore(\n  { name: 'products' },\n  withEntities<Product>(),\n  withCartEntities<CartItem>()\n);\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"entitiesPropsFactory")," function takes the name of the ",(0,r.kt)("inlineCode",{parentName:"p"},"feature")," and returns ",(0,r.kt)("inlineCode",{parentName:"p"},"entitiesRef")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"entitiesProps")," we can use in our store."),(0,r.kt)("p",null,"In the above example, our final ",(0,r.kt)("inlineCode",{parentName:"p"},"state")," shape will be:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  entities: Record<number, Product>;\n  ids: number[];\n  // highlight-next-line\n  cartEntities: Record<number, CartItem>;\n  // highlight-next-line\n  cartIds: number[];\n}\n")),(0,r.kt)(a.S,{src:s,packages:["entities"],mdxType:"LiveDemo"}),(0,r.kt)("br",null),(0,r.kt)("p",null,"We can pass the ",(0,r.kt)("inlineCode",{parentName:"p"},"cartEntitiesRef")," to each one of the built-in ",(0,r.kt)("a",{parentName:"p",href:"./entities#queries"},"queries")," and ",(0,r.kt)("a",{parentName:"p",href:"./entities#mutations"},"mutations"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="products.repository.ts"',title:'"products.repository.ts"'},"import { upsertEntitiesById } from '@ngneat/elf-entities';\n\nexport function updateCart(id: Product['id']) {\n  productsStore.update(\n    upsertEntitiesById(id, {\n      updater: (e) => ({ ...e, quantity: e.quantity + 1 }),\n      creator: (id) => ({ id, quantity: 1 }),\n      // highlight-next-line\n      ref: cartEntitiesRef,\n    })\n  );\n}\n")),(0,r.kt)("p",null,"One more use case for custom entities props is when we work with a normalized state. For example, we might have a ",(0,r.kt)("inlineCode",{parentName:"p"},"movies")," page, with ",(0,r.kt)("inlineCode",{parentName:"p"},"actors")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"genres"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="movies.repository.ts"',title:'"movies.repository.ts"'},"interface Actor {\n  id: string;\n  name: string;\n}\n\ninterface Genre {\n  id: string;\n  name: string;\n}\n\ninterface Movie {\n  id: string;\n  title: string;\n  genres: Array<Genre['id']>;\n  actors: Array<Actor['id']>;\n}\n\nconst { actorsEntitiesRef, withActorsEntities } =\n  entitiesPropsFactory('actors');\n\nconst { genresEntitiesRef, withGenresEntities } =\n  entitiesPropsFactory('genres');\n\nconst store = createStore(\n  { name: 'movies' },\n  withEntities<Movie>(),\n  withGenresEntities<Genre>(),\n  withActorsEntities<Actor>()\n);\n\nstore.update(\n  addEntities({ id: '1', name: 'Nicolas cage' }, { ref: actorsEntitiesRef }),\n  addEntities({ id: '1', name: 'Action' }, { ref: genresEntitiesRef }),\n  addEntities({\n    id: '1',\n    title: 'Gone in 60 Seconds',\n    genres: ['1'],\n    actors: ['1'],\n  })\n);\n")))}f.isMDXComponent=!0}}]);