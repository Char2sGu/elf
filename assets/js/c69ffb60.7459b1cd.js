"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[258],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(n),f=o,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||i;return n?r.createElement(m,s(s({ref:t},u),{},{components:n})):r.createElement(m,s({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=p;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3688:function(e,t,n){n.d(t,{S:function(){return E}});var r=n(7294);function o(e){return e&&e.origin?e.origin:"https://stackblitz.com"}function i(){return Math.random().toString(36).substring(7)}function s(e){var t="";return e?(e.forceEmbedLayout&&(t+="embed=1"),e.clickToLoad&&(t+=(t.length?"&":"")+"ctl=1"),e.openFile&&(t+=(t.length?"&":"")+"file="+e.openFile),!e.view||"preview"!==e.view&&"editor"!==e.view||(t+=(t.length?"&":"")+"view="+e.view),e.theme&&(t+=(t.length?"&":"")+"theme="+e.theme),e.hideExplorer&&(t+=(t.length?"&":"")+"hideExplorer=1"),e.hideNavigation&&(t+=(t.length?"&":"")+"hideNavigation=1;"),e.hideDevTools&&(t+=(t.length?"&":"")+"hidedevtools=1"),e.initialPath&&(t+=(t.length?"&":"")+"initialpath="+encodeURIComponent(e.initialPath)),"number"==typeof e.devToolsHeight&&e.devToolsHeight>0&&e.devToolsHeight<100&&(t+=(t.length?"&":"")+"devtoolsheight="+e.devToolsHeight),t.length?"?"+t:t):t}function a(e,t,n){if(null===e.parentNode)throw new Error("Invalid Element");t.id=e.id,u(t,n),e.parentNode.replaceChild(t,e)}function l(e){if("string"==typeof e){var t=document.getElementById(e);if(null!==t)return t}else if(e instanceof HTMLElement)return e;throw new Error("Invalid Element")}function c(e){return e&&!1===e.newWindow?"_self":"_blank"}function u(e,t){t&&(t.hasOwnProperty("height")&&(e.height=""+t.height),t.hasOwnProperty("width")&&(e.width=""+t.width)),e.height||(e.height="300"),e.width||e.setAttribute("style","width:100%;")}var d=function(e){var t=this;this.pending={},this.port=e,this.port.onmessage=function(e){if(e.data.payload.__reqid){var n=e.data.payload.__reqid,r=e.data.payload.__success;if(t.pending[n]){if(delete e.data.payload.__reqid,delete e.data.payload.__success,r){var o=0===Object.keys(e.data.payload).length&&e.data.payload.constructor===Object?null:e.data.payload;t.pending[n].resolve(o)}else{var i=e.data.payload.error?e.data.type+": "+e.data.payload.error:e.data.type;t.pending[n].reject(i)}delete t.pending[n]}}}};d.prototype.request=function(e){var t=this,n=i();return new Promise((function(r,o){t.pending[n]={resolve:r,reject:o},e.payload.__reqid=n,t.port.postMessage(e)}))};var p=function(e,t){var n=this;this.rdc=new d(e),this.preview={},Object.defineProperty(this.preview,"origin",{value:t.previewOrigin,writable:!1}),this.editor={openFile:function(e){return n.rdc.request({type:"SDK_OPEN_FILE",payload:{path:e}})}}};p.prototype.applyFsDiff=function(e){return this.rdc.request({type:"SDK_APPLY_FS_DIFF",payload:e})},p.prototype.getFsSnapshot=function(){return this.rdc.request({type:"SDK_GET_FS_SNAPSHOT",payload:{}})},p.prototype.getDependencies=function(){return this.rdc.request({type:"SDK_GET_DEPS_SNAPSHOT",payload:{}})};var f=[],m=function(e){var t=this;this.id=i(),this.element=e,this.pending=new Promise((function(e,n){var r=function(n){n.data.action&&"SDK_INIT_SUCCESS"===n.data.action&&n.data.id===t.id&&(t.vm=new p(n.ports[0],n.data.payload),e(t.vm),i())},o=function(){t.element.contentWindow&&t.element.contentWindow.postMessage({action:"SDK_INIT",id:t.id},"*")};function i(){window.clearInterval(a),window.removeEventListener("message",r)}window.addEventListener("message",r),o();var s=0,a=window.setInterval((function(){if(t.vm)i();else{if(s>=20)return i(),n("Timeout: Unable to establish a connection with the StackBlitz VM"),void f.forEach((function(e,n){e.id===t.id&&f.splice(n,1)}));s++,o()}}),500)})),f.push(this)},h=["typescript","create-react-app","angular-cli","javascript","polymer","vue"];function g(e,t){var n=document.createElement("input");return n.type="hidden",n.name=e,n.value=t,n}function v(e){-1===h.indexOf(e.template)&&console.warn("Unsupported project template, must be one of: "+h.join(", "));var t=document.createElement("form");return t.method="POST",t.setAttribute("style","display:none;"),t.appendChild(g("project[title]",e.title)),t.appendChild(g("project[description]",e.description)),t.appendChild(g("project[template]",e.template)),e.tags&&e.tags.forEach((function(e){t.appendChild(g("project[tags][]",e))})),e.dependencies&&t.appendChild(g("project[dependencies]",JSON.stringify(e.dependencies))),e.settings&&t.appendChild(g("project[settings]",JSON.stringify(e.settings))),Object.keys(e.files).forEach((function(n){t.appendChild(g("project[files]["+n+"]",e.files[n]))})),t}function y(e,t){var n=v(e);return n.action=o(t)+"/run"+s(t),n.id="sb","<html><head><title></title></head><body>"+n.outerHTML+"<script>document.getElementById('sb').submit();<\/script></body></html>"}function k(e,t){var n=v(e);n.action=o(t)+"/run"+s(t),n.target=c(t),document.body.appendChild(n),n.submit(),document.body.removeChild(n)}var b={connect:function(e){if(!e||!e.contentWindow)return Promise.reject("Provided element is not an iframe.");var t=function(e){var t=e instanceof Element?"element":"id";return f.find((function(n){return n[t]===e}))||null}(e);return t?t.pending:new m(e).pending},openGithubProject:function(e,t){window.open(o(t)+"/github/"+e+s(t),c(t))},openProject:function(e,t){k(e,t)},openProjectId:function(e,t){window.open(o(t)+"/edit/"+e+s(t),c(t))},embedGithubProject:function(e,t,n){var r=l(e),i=document.createElement("iframe");return i.src=o(n)+"/github/"+t+s(n),a(r,i,n),b.connect(i)},embedProject:function(e,t,n){var r=l(e),o=y(t,n),i=document.createElement("iframe");return a(r,i,n),i.contentDocument&&i.contentDocument.write(o),b.connect(i)},embedProjectId:function(e,t,n){var r=l(e),i=document.createElement("iframe");return i.src=o(n)+"/edit/"+t+s(n),a(r,i,n),b.connect(i)}},w=b,q=n(5350),T={core:{"@ngneat/elf":"latest"},entities:{"@ngneat/elf-entities":"latest"},requests:{"@ngneat/elf-requests":"latest"},pagination:{"@ngneat/elf-pagination":"latest"},devtools:{"@ngneat/elf-devtools":"latest"},persist:{"@ngneat/elf-persist-state":"latest"},history:{"@ngneat/elf-state-history":"latest"},rxjs:{rxjs:"latest"},immer:{immer:"latest"}};function E(e){var t=e.src,n=e.packages,o=void 0===n?[]:n,i=(0,r.useRef)(),s=["core","rxjs"].concat(o),a=(0,q.Z)().isDarkTheme;return(0,r.useEffect)((function(){var e=s.reduce((function(e,t){return Object.assign(e,T[t]),e}),{});w.embedProject(i.current,{description:"this is descrption",title:"Elf Core",files:{"index.html":"","index.ts":t},template:"typescript",dependencies:e,settings:{compile:{clearConsole:!0}}},{hideDevTools:!1,devToolsHeight:99,theme:a?"dark":"light",height:"500px"})}),[]),r.createElement("section",{style:{height:"500px"}},r.createElement("div",{ref:i}))}},2924:function(e,t,n){var r=n(7294).createContext(void 0);t.Z=r},5350:function(e,t,n){var r=n(7294),o=n(2924);t.Z=function(){var e=(0,r.useContext)(o.Z);if(null==e)throw new Error('"useThemeContext" is used outside of "Layout" component. Please see https://docusaurus.io/docs/api/themes/configuration#usethemecontext.');return e}},6850:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),s=n(3688),a=["components"],l={},c="Requests Result",u={unversionedId:"features/requests-result",id:"features/requests-result",isDocsHomePage:!1,title:"Requests Result",description:"Elf provides a convenient way to track the status of async requests and combine it with your store selectors. First, you need to install the package by",source:"@site/docs/features/requests-result.mdx",sourceDirName:"features",slug:"/features/requests-result",permalink:"/elf/docs/features/requests-result",editUrl:"https://github.com/ngneat/elf/docusaurus/edit/main/website/docs/features/requests-result.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Entities Props Factory",permalink:"/elf/docs/features/entities/entities-props-factory"},next:{title:"Pagination",permalink:"/elf/docs/features/pagination"}},d=[{value:"Additional Options",id:"additional-options",children:[],level:3},{value:"API",id:"api",children:[],level:3}],p={toc:d};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"requests-result"},"Requests Result"),(0,i.kt)("p",null,"Elf provides a convenient way to track the ",(0,i.kt)("inlineCode",{parentName:"p"},"status")," of async requests and combine it with your store selectors. First, you need to install the package by\nusing the CLI command ",(0,i.kt)("inlineCode",{parentName:"p"},"elf-cli install")," and selecting the requests package, or via npm:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @ngneat/elf-requests\n")),(0,i.kt)("p",null,"Now, simply add to your source request the ",(0,i.kt)("inlineCode",{parentName:"p"},"trackRequestResult")," operator, and give it a unique ",(0,i.kt)("inlineCode",{parentName:"p"},"key"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todos.service.ts"',title:'"todos.service.ts"'},"import { trackRequestResult } from '@ngneat/elf-requests';\nimport { setTodos } from './todos.repository';\n\nexport function fetchTodos() {\n  return http.get(todosUrl).pipe(\n    tap(setTodos),\n    // highlight-next-line\n    trackRequestResult(['todos'])\n  );\n}\n")),(0,i.kt)("p",null,"Now, we can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"joinRequestResult")," operator with our store selectors:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todos.repository"',title:'"todos.repository"'},"import { createStore } from '@ngneat/elf';\nimport { withEntities } from '@ngneat/elf-entities';\nimport { joinRequestResult } from '@ngneat/elf-requests';\n\ninterface Todo {\n  id: number;\n  label: string;\n}\n\nconst todosStore = createStore({ name: 'todos' }, withEntities<Todo>());\n\nexport const entities$ = store.pipe(\n  selectAllEntities(),\n  // highlight-next-line\n  joinRequestResult(['todos'])\n);\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"entities$")," selector will now track the ",(0,i.kt)("inlineCode",{parentName:"p"},"todos")," request and will provide the following information:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"entities$.subscribe(\n  ({ isLoading, isError, isSuccess, data, error, status }) => {\n    console.log(\n      isLoading,\n      isError,\n      isSuccess,\n      status,\n      successfulRequestsCount,\n      data, // typed as Todo[]\n      error\n    );\n  }\n);\n")),(0,i.kt)(s.S,{src:"import { createStore } from '@ngneat/elf';\nimport {\n  setEntities,\n  withEntities,\n  selectAllEntities,\n} from '@ngneat/elf-entities';\nimport { joinRequestResult, trackRequestResult } from '@ngneat/elf-requests';\nimport { fromFetch } from 'rxjs/fetch';\nimport { tap } from 'rxjs';\n\ninterface Todo {\n  id: number;\n  label: string;\n}\n\nconst store = createStore({ name: 'todos' }, withEntities<Todo>());\n\nconst entities$ = store.pipe(selectAllEntities(), joinRequestResult(['todos']));\n\nentities$.subscribe((result) => {\n  console.log(result);\n});\n\nfunction setTodos(todos: Todo[]) {\n  store.update(setEntities(todos));\n}\n\n// todos.service.ts\nfunction fecthTodos() {\n  return fromFetch<Todo[]>('https://jsonplaceholder.typicode.com/todos', {\n    selector: (response) => response.json(),\n  }).pipe(tap(setTodos), trackRequestResult(['todos']));\n}\n\nsetTimeout(() => {\n  fecthTodos().subscribe();\n}, 2000);\n\nsetTimeout(() => {\n  fecthTodos().subscribe();\n}, 4000);\n",packages:["entities","requests"],mdxType:"LiveDemo"}),(0,i.kt)("br",null),(0,i.kt)("p",null,"Here is an example of a ",(0,i.kt)("inlineCode",{parentName:"p"},"dynamic")," selector:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export const selectTodo = (id: Todo['id]) => store.pipe(\n  selectEntity(id),\n  // highlight-next-line\n  joinRequestResult(['todos', id])\n);\n")),(0,i.kt)("h3",{id:"additional-options"},"Additional Options"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"staleTime")," - When we should refetch")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todos.service.ts"',title:'"todos.service.ts"'},"import { trackRequestResult } from '@ngneat/elf-requests';\nimport { setTodos } from './todos.repository';\n\nexport function fetchTodos() {\n  return http.get(todosUrl).pipe(\n    tap(setTodos),\n    // highlight-next-line\n    trackRequestResult(['todos'], { staleTime: 10_000 })\n  );\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"skipCache")," - Ignore everything and perform the request")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todos.service.ts"',title:'"todos.service.ts"'},"import { trackRequestResult } from '@ngneat/elf-requests';\nimport { setTodos } from './todos.repository';\n\nexport function fetchTodos() {\n  return http.get(todosUrl).pipe(\n    tap(setTodos),\n    // highlight-next-line\n    trackRequestResult(['todos'], { skipCache: true })\n  );\n}\n")),(0,i.kt)("h3",{id:"api"},"API"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"getRequestResult")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"getRequestResult(key): Observable<RequestResult>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"deleteRequestResult")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"deleteRequestResult(key): void")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"clearRequestsResult")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"clearRequestsResult(key): void"))))}f.isMDXComponent=!0}}]);